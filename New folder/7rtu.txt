import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
import seaborn as sns

# داده‌ها را بارگیری و پیش‌پردازش کنید
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

# مقیاس‌بندی و تغییر شکل داده‌ها
train_images = train_images.reshape((60000, 28, 28, 1)).astype('float32') / 255
test_images = test_images.reshape((10000, 28, 28, 1)).astype('float32') / 255

# برچسب‌ها را به فرمت دسته‌ای تبدیل کنید
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

# مدل شبکه عصبی را بسازید
model = models.Sequential()
model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.Flatten())
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(10, activation='softmax'))

# مدل را کامپایل کنید
model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

# مدل را بر روی داده‌های آموزشی آموزش دهید
model.fit(train_images, train_labels, epochs=5, batch_size=64)

# دقت مدل را بر روی داده‌های آزمایشی ارزیابی کنید
test_loss, test_acc = model.evaluate(test_images, test_labels)
print('دقت تست:', test_acc)

# پیش‌بینی‌ها را انجام دهید
predictions = model.predict(test_images)

# ماتریس درهم‌ریختگی را محاسبه و نمایش دهید
test_labels_vals = np.argmax(test_labels, axis=1)
predictions_vals = np.argmax(predictions, axis=1)
conf_matrix = confusion_matrix(test_labels_vals, predictions_vals)

plt.figure(figsize=(10,8))
sns.heatmap(conf_matrix, annot=True, fmt='d')
plt.xlabel('پیش‌بینی شده')
plt.ylabel('واقعی')
plt.show()
